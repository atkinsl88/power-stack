version: "2.1"

services:
  cli:
    extends:
      file: ${HOME}/.docksal/stacks/services.yml
      service: cli
#    volumes:
#      # Keep write-heavy folders in a volumes (improves fs performance on non-Linux platforms)
#      - drupal_vendor:/var/www/backend/starters/development/vendor
#      - gatsby_node_modules:/var/www/frontend/node_modules
#      - gatsby_build_cache:/var/www/frontend/.cache # gatsby build and preview cannot share the same .cache folder
    environment:
      - DEBUG=1
      - DRUSH_OPTIONS_URI=backend.${VIRTUAL_HOST}
      - DRUPAL_URI=http://web/
      - BACKEND_STARTER
      - FRONTEND_STARTER
    # Keep cli running idle
    command: ["tail", "-f", "/dev/null"]

  start_page:
    extends:
      file: ${HOME}/.docksal/stacks/services.yml
      service: apache
    labels:
      - io.docksal.virtual-host=${VIRTUAL_HOST}
    environment:
      - APACHE_DOCUMENTROOT=/var/www/.docksal/start
      - APACHE_FCGI_HOST_PORT=php:9000
    depends_on:
      - php

  web:
    extends:
      file: ${HOME}/.docksal/stacks/services.yml
      service: apache
    labels:
      - io.docksal.virtual-host=backend.${VIRTUAL_HOST}
    environment:
      - APACHE_DOCUMENTROOT=/var/www/backend/starters/${BACKEND_STARTER}/${DOCROOT}
      - APACHE_FCGI_HOST_PORT=php:9000
    depends_on:
      - php

  php:
    extends:
      file: ${HOME}/.docksal/stacks/services.yml
      service: cli
#    volumes:
#      # Keep write-heavy folders in a volumes (improves fs performance on non-Linux platforms)
#      - drupal_vendor:/var/www/backend/starters/${BACKEND_STARTER}/vendor
    environment:
      - DEBUG=1
      - DRUSH_OPTIONS_URI=backend.${VIRTUAL_HOST}
      - BACKEND_STARTER
      - FRONTEND_STARTER
      - VIRTUAL_HOST
    depends_on:
      - cli # cli has to start first to avoid race conditions in startup scripts between cli, php and preview

  db:
    extends:
      file: ${HOME}/.docksal/stacks/services.yml
      service: mysql
    # Don't disable the healthcheck here as MySQL takes some time to start and we need the healthcheck to wait for that.
    #healthcheck:
    #  disable: true # Temporary workaround to disable container healthcheck (causes performance issues with Docker)

  frontend:
    hostname: frontend
    extends:
      file: ${HOME}/.docksal/stacks/services.yml
      service: cli
    #    volumes:
    #      # Keep write-heavy folders in a volumes (improves fs performance on non-Linux platforms)
    #      - gatsby_node_modules:/var/www/frontend/node_modules
    #      - gatsby_preview_cache:/var/www/frontend/.cache # gatsby build and preview cannot share the same .cache folder
    labels:
      - io.docksal.virtual-host=frontend.${VIRTUAL_HOST}
      - io.docksal.virtual-port=3000
    environment:
      - DEBUG=1
      # This could be used for fs polling on systems where fs events are not available (Mac with NFS volumes or Windows)
      - CHOKIDAR_USEPOLLING=${CHOKIDAR_USEPOLLING:-0}
      - DRUPAL_URI=http://web/
      - BACKEND_STARTER
      - FRONTEND_STARTER
    working_dir: /var/www/frontend
    # Optionally run in debug mode by setting PREVIEW_START_COMMAND to "npm run debug"
    command: [ "bash", "-lc", "yarn workspace ${FRONTEND_STARTER} develop -H 0.0.0.0 -p 3000" ]
    depends_on:
      - cli # cli has to start first to avoid race conditions in startup scripts between cli, php and preview

  docs:
    hostname: docs
    extends:
      file: ${HOME}/.docksal/stacks/services.yml
      service: cli
#    volumes:
#      # Keep write-heavy folders in a volumes (improves fs performance on non-Linux platforms)
#      - gatsby_node_modules:/var/www/frontend/node_modules
#      - gatsby_preview_cache:/var/www/frontend/.cache # gatsby build and preview cannot share the same .cache folder
    labels:
      - io.docksal.virtual-host=docs.${VIRTUAL_HOST}
      - io.docksal.virtual-port=3000
#    environment:
#      - DEBUG=1
#      # This could be used for fs polling on systems where fs events are not available (Mac with NFS volumes or Windows)
#      - CHOKIDAR_USEPOLLING=${CHOKIDAR_USEPOLLING:-0}
#      - DRUPAL_URI=http://web/
    working_dir: /var/www/docs
    # Optionally run in debug mode by setting PREVIEW_START_COMMAND to "npm run debug"
    command: ["bash", "-lc", "yarn develop -H 0.0.0.0 -p 3000"]
    depends_on:
      - cli # cli has to start first to avoid race conditions in startup scripts between cli, php and preview

#volumes:
#  drupal_vendor:        # Used with cli and php
#  gatsby_node_modules:  # Used with cli and preview
#  gatsby_preview_cache: # Used with preview (gatsby develop)
#  gatsby_build_cache:   # Used with cli / fe/build (gatsby build)